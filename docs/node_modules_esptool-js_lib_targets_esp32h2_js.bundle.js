"use strict";
(self["webpackChunkTactility_Web_Installer"] = self["webpackChunkTactility_Web_Installer"] || []).push([["node_modules_esptool-js_lib_targets_esp32h2_js"],{

/***/ "./node_modules/esptool-js/lib/targets/esp32h2.js":
/*!********************************************************!*\
  !*** ./node_modules/esptool-js/lib/targets/esp32h2.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ESP32H2ROM: () => (/* binding */ ESP32H2ROM)
/* harmony export */ });
/* harmony import */ var _rom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rom.js */ "./node_modules/esptool-js/lib/targets/rom.js");

class ESP32H2ROM extends _rom_js__WEBPACK_IMPORTED_MODULE_0__.ROM {
    constructor() {
        super(...arguments);
        this.CHIP_NAME = "ESP32-H2";
        this.IMAGE_CHIP_ID = 16;
        this.EFUSE_BASE = 0x60008800;
        this.MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;
        this.UART_CLKDIV_REG = 0x3ff40014;
        this.UART_CLKDIV_MASK = 0xfffff;
        this.UART_DATE_REG_ADDR = 0x6000007c;
        this.FLASH_WRITE_SIZE = 0x400;
        this.BOOTLOADER_FLASH_OFFSET = 0x0;
        this.FLASH_SIZES = {
            "1MB": 0x00,
            "2MB": 0x10,
            "4MB": 0x20,
            "8MB": 0x30,
            "16MB": 0x40,
        };
        this.SPI_REG_BASE = 0x60002000;
        this.SPI_USR_OFFS = 0x18;
        this.SPI_USR1_OFFS = 0x1c;
        this.SPI_USR2_OFFS = 0x20;
        this.SPI_MOSI_DLEN_OFFS = 0x24;
        this.SPI_MISO_DLEN_OFFS = 0x28;
        this.SPI_W0_OFFS = 0x58;
        this.USB_RAM_BLOCK = 0x800;
        this.UARTDEV_BUF_NO_USB = 3;
        this.UARTDEV_BUF_NO = 0x3fcef14c;
    }
    async getChipDescription(loader) {
        return this.CHIP_NAME;
    }
    async getChipFeatures(loader) {
        return ["BLE", "IEEE802.15.4"];
    }
    async getCrystalFreq(loader) {
        // ESP32H2 XTAL is fixed to 32MHz
        return 32;
    }
    _d2h(d) {
        const h = (+d).toString(16);
        return h.length === 1 ? "0" + h : h;
    }
    async postConnect(loader) {
        const bufNo = (await loader.readReg(this.UARTDEV_BUF_NO)) & 0xff;
        loader.debug("In _post_connect " + bufNo);
        if (bufNo == this.UARTDEV_BUF_NO_USB) {
            loader.ESP_RAM_BLOCK = this.USB_RAM_BLOCK;
        }
    }
    async readMac(loader) {
        let mac0 = await loader.readReg(this.MAC_EFUSE_REG);
        mac0 = mac0 >>> 0;
        let mac1 = await loader.readReg(this.MAC_EFUSE_REG + 4);
        mac1 = (mac1 >>> 0) & 0x0000ffff;
        const mac = new Uint8Array(6);
        mac[0] = (mac1 >> 8) & 0xff;
        mac[1] = mac1 & 0xff;
        mac[2] = (mac0 >> 24) & 0xff;
        mac[3] = (mac0 >> 16) & 0xff;
        mac[4] = (mac0 >> 8) & 0xff;
        mac[5] = mac0 & 0xff;
        return (this._d2h(mac[0]) +
            ":" +
            this._d2h(mac[1]) +
            ":" +
            this._d2h(mac[2]) +
            ":" +
            this._d2h(mac[3]) +
            ":" +
            this._d2h(mac[4]) +
            ":" +
            this._d2h(mac[5]));
    }
    getEraseSize(offset, size) {
        return size;
    }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2VzcHRvb2wtanNfbGliX3RhcmdldHNfZXNwMzJoMl9qcy5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0I7QUFDeEIseUJBQXlCLHdDQUFHO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1RhY3RpbGl0eSBXZWIgSW5zdGFsbGVyLy4vbm9kZV9tb2R1bGVzL2VzcHRvb2wtanMvbGliL3RhcmdldHMvZXNwMzJoMi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBST00gfSBmcm9tIFwiLi9yb20uanNcIjtcbmV4cG9ydCBjbGFzcyBFU1AzMkgyUk9NIGV4dGVuZHMgUk9NIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5DSElQX05BTUUgPSBcIkVTUDMyLUgyXCI7XG4gICAgICAgIHRoaXMuSU1BR0VfQ0hJUF9JRCA9IDE2O1xuICAgICAgICB0aGlzLkVGVVNFX0JBU0UgPSAweDYwMDA4ODAwO1xuICAgICAgICB0aGlzLk1BQ19FRlVTRV9SRUcgPSB0aGlzLkVGVVNFX0JBU0UgKyAweDA0NDtcbiAgICAgICAgdGhpcy5VQVJUX0NMS0RJVl9SRUcgPSAweDNmZjQwMDE0O1xuICAgICAgICB0aGlzLlVBUlRfQ0xLRElWX01BU0sgPSAweGZmZmZmO1xuICAgICAgICB0aGlzLlVBUlRfREFURV9SRUdfQUREUiA9IDB4NjAwMDAwN2M7XG4gICAgICAgIHRoaXMuRkxBU0hfV1JJVEVfU0laRSA9IDB4NDAwO1xuICAgICAgICB0aGlzLkJPT1RMT0FERVJfRkxBU0hfT0ZGU0VUID0gMHgwO1xuICAgICAgICB0aGlzLkZMQVNIX1NJWkVTID0ge1xuICAgICAgICAgICAgXCIxTUJcIjogMHgwMCxcbiAgICAgICAgICAgIFwiMk1CXCI6IDB4MTAsXG4gICAgICAgICAgICBcIjRNQlwiOiAweDIwLFxuICAgICAgICAgICAgXCI4TUJcIjogMHgzMCxcbiAgICAgICAgICAgIFwiMTZNQlwiOiAweDQwLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLlNQSV9SRUdfQkFTRSA9IDB4NjAwMDIwMDA7XG4gICAgICAgIHRoaXMuU1BJX1VTUl9PRkZTID0gMHgxODtcbiAgICAgICAgdGhpcy5TUElfVVNSMV9PRkZTID0gMHgxYztcbiAgICAgICAgdGhpcy5TUElfVVNSMl9PRkZTID0gMHgyMDtcbiAgICAgICAgdGhpcy5TUElfTU9TSV9ETEVOX09GRlMgPSAweDI0O1xuICAgICAgICB0aGlzLlNQSV9NSVNPX0RMRU5fT0ZGUyA9IDB4Mjg7XG4gICAgICAgIHRoaXMuU1BJX1cwX09GRlMgPSAweDU4O1xuICAgICAgICB0aGlzLlVTQl9SQU1fQkxPQ0sgPSAweDgwMDtcbiAgICAgICAgdGhpcy5VQVJUREVWX0JVRl9OT19VU0IgPSAzO1xuICAgICAgICB0aGlzLlVBUlRERVZfQlVGX05PID0gMHgzZmNlZjE0YztcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q2hpcERlc2NyaXB0aW9uKGxvYWRlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5DSElQX05BTUU7XG4gICAgfVxuICAgIGFzeW5jIGdldENoaXBGZWF0dXJlcyhsb2FkZXIpIHtcbiAgICAgICAgcmV0dXJuIFtcIkJMRVwiLCBcIklFRUU4MDIuMTUuNFwiXTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q3J5c3RhbEZyZXEobG9hZGVyKSB7XG4gICAgICAgIC8vIEVTUDMySDIgWFRBTCBpcyBmaXhlZCB0byAzMk1IelxuICAgICAgICByZXR1cm4gMzI7XG4gICAgfVxuICAgIF9kMmgoZCkge1xuICAgICAgICBjb25zdCBoID0gKCtkKS50b1N0cmluZygxNik7XG4gICAgICAgIHJldHVybiBoLmxlbmd0aCA9PT0gMSA/IFwiMFwiICsgaCA6IGg7XG4gICAgfVxuICAgIGFzeW5jIHBvc3RDb25uZWN0KGxvYWRlcikge1xuICAgICAgICBjb25zdCBidWZObyA9IChhd2FpdCBsb2FkZXIucmVhZFJlZyh0aGlzLlVBUlRERVZfQlVGX05PKSkgJiAweGZmO1xuICAgICAgICBsb2FkZXIuZGVidWcoXCJJbiBfcG9zdF9jb25uZWN0IFwiICsgYnVmTm8pO1xuICAgICAgICBpZiAoYnVmTm8gPT0gdGhpcy5VQVJUREVWX0JVRl9OT19VU0IpIHtcbiAgICAgICAgICAgIGxvYWRlci5FU1BfUkFNX0JMT0NLID0gdGhpcy5VU0JfUkFNX0JMT0NLO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHJlYWRNYWMobG9hZGVyKSB7XG4gICAgICAgIGxldCBtYWMwID0gYXdhaXQgbG9hZGVyLnJlYWRSZWcodGhpcy5NQUNfRUZVU0VfUkVHKTtcbiAgICAgICAgbWFjMCA9IG1hYzAgPj4+IDA7XG4gICAgICAgIGxldCBtYWMxID0gYXdhaXQgbG9hZGVyLnJlYWRSZWcodGhpcy5NQUNfRUZVU0VfUkVHICsgNCk7XG4gICAgICAgIG1hYzEgPSAobWFjMSA+Pj4gMCkgJiAweDAwMDBmZmZmO1xuICAgICAgICBjb25zdCBtYWMgPSBuZXcgVWludDhBcnJheSg2KTtcbiAgICAgICAgbWFjWzBdID0gKG1hYzEgPj4gOCkgJiAweGZmO1xuICAgICAgICBtYWNbMV0gPSBtYWMxICYgMHhmZjtcbiAgICAgICAgbWFjWzJdID0gKG1hYzAgPj4gMjQpICYgMHhmZjtcbiAgICAgICAgbWFjWzNdID0gKG1hYzAgPj4gMTYpICYgMHhmZjtcbiAgICAgICAgbWFjWzRdID0gKG1hYzAgPj4gOCkgJiAweGZmO1xuICAgICAgICBtYWNbNV0gPSBtYWMwICYgMHhmZjtcbiAgICAgICAgcmV0dXJuICh0aGlzLl9kMmgobWFjWzBdKSArXG4gICAgICAgICAgICBcIjpcIiArXG4gICAgICAgICAgICB0aGlzLl9kMmgobWFjWzFdKSArXG4gICAgICAgICAgICBcIjpcIiArXG4gICAgICAgICAgICB0aGlzLl9kMmgobWFjWzJdKSArXG4gICAgICAgICAgICBcIjpcIiArXG4gICAgICAgICAgICB0aGlzLl9kMmgobWFjWzNdKSArXG4gICAgICAgICAgICBcIjpcIiArXG4gICAgICAgICAgICB0aGlzLl9kMmgobWFjWzRdKSArXG4gICAgICAgICAgICBcIjpcIiArXG4gICAgICAgICAgICB0aGlzLl9kMmgobWFjWzVdKSk7XG4gICAgfVxuICAgIGdldEVyYXNlU2l6ZShvZmZzZXQsIHNpemUpIHtcbiAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9